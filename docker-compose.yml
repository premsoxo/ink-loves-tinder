version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: dating-app-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: dating-app
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - dating-app-network

  # Dating App Backend & Frontend
  dating-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dating-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/dating-app?authSource=admin
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - PORT=5000
      - CORS_ORIGIN=http://localhost:3000
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - dating-app-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/auth/me', (res) => { process.exit(res.statusCode === 401 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  # Uncomment when you have nginx.conf and SSL certificates
  # nginx:
  #   image: nginx:alpine
  #   container_name: dating-app-nginx
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - dating-app
  #   networks:
  #     - dating-app-network

volumes:
  mongodb_data:
    driver: local

networks:
  dating-app-network:
    driver: bridge

# Development override
# To use this, run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
